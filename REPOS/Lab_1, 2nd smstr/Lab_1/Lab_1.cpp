#include <iostream>
using namespace std;
#include <stdio.h>
#define M 3
#define _CRT_SECURE_NO_
struct Progr {
    char name[7]; 
    char randname = '№';
    int number;
    int code;       
    float challange;      
    float indy;      
};
void Input(Progr mm[]){
 int i, j; 
    int m;    
    Progr inf;
    for (i = 0;i < M; i++) {
        printf("%d. Введите: название программы, количество строк кода, Время исп. на SGI Callenge (cек), Время исп. на SGI Indy (cек) >",
            M + 1);
        scanf_s("%s", mm[i].name,sizeof(mm[i].name));
        scanf_s("%d", &mm[i].code);
        scanf_s("%f",&mm[i].challange);
        scanf_s("%f", &mm[i].indy);
    }
    cout << "Выберите действие" << endl;
    cout << "(1)печать" << endl;
    cout << "(2) сортировка" << endl;
    int ans;
    cin >> ans;
    if (ans == 1) {
        printf("-----------------------------------------------------------------------------------------------------------\n");
        printf("|Время выполнения некоторых программ, которые применяют параллельные алгоритмы                            |\n");
        printf("|---------------------------------------------------------------------------------------------------------|\n");
        printf("| Название программы |Количество строк кода |Время исп. на SGI Callenge (cек)|Время исп. на SGI Indy (cек)|\n");
        printf("|                    |                      |                                |                            |\n");
        printf("|--------------------|----------------------|--------------------------------|----------------------------|\n");
        for (i = 0; i < M; i++)
            printf("|%-19s|%-22d|%-32.2f|%-28.2f|\n",
                mm[i].name, mm[i].code, mm[i].challange, mm[i].indy);
        printf("-----------------------------------------------------------------------------------------------------------\n");

    }
    if (ans == 2) {
        printf("-----------------------------------------------------------------------------------------------------------\n");
        printf("|Время выполнения некоторых программ, которые применяют параллельные алгоритмы                            |\n");
        printf("|---------------------------------------------------------------------------------------------------------|\n");
        printf("| Название программы |Количество строк кода |Время исп. на SGI Callenge (cек)|Время исп. на SGI Indy (cек)|\n");
        printf("|                    |                      |                                |                            |\n");
        printf("|--------------------|----------------------|--------------------------------|----------------------------|\n");
        for (i = 0; i < M; i++)
            printf("|%-19s|%-22d|%-32.2f|%-28.2f|\n",
                mm[i].name, mm[i].code, mm[i].challange, mm[i].indy);
        printf("-----------------------------------------------------------------------------------------------------------\n");
        /* сортировка массива */
        for (int i = 0; i < M - 1; i++) {
            m = i; /* минимальный элемент - первый */
            for (int j = i + 1; j < M; j++)

                if (strcmp(mm[m].name, mm[j].name) > 0) m = j;
            if (m > i) {

                inf = mm[i];
                mm[i] = mm[m];
                mm[m] = inf;
            }

        }
        printf("-----------------------------------------------------------------------------------------------------------\n");
        printf("|Время выполнения некоторых программ, которые применяют параллельные алгоритмы                            |\n");
        printf("|---------------------------------------------------------------------------------------------------------|\n");
        printf("| Название программы |Количество строк кода |Время исп. на SGI Callenge (cек)|Время исп. на SGI Indy (cек)|\n");
        printf("|                    |                      |                                |                            |\n");
        printf("|--------------------|----------------------|--------------------------------|----------------------------|\n");
        for (i = 0; i < M; i++)
            printf("|%-19s|%-22d|%-32.2f|%-28.2f|\n",
                mm[i].name, mm[i].code, mm[i].challange, mm[i].indy);
        printf("-----------------------------------------------------------------------------------------------------------\n");
 }
   
}
void Random(Progr mm[]) {
    for (int i = 0; i < M; i++) {
        mm[i].number = i;
        mm[i].code = rand() % 417 + 3803;
        mm[i].challange = rand() % 219 + static_cast <float> (rand()) / (static_cast <float> (RAND_MAX / (518)));
        mm[i].indy = rand() % 219 + static_cast <float> (rand()) / (static_cast <float> (RAND_MAX / (518)));
    }
    for (int i = 0; i < M; i++) {
        mm[i].number = rand() % M;
    }
}
void Print(Progr mm[]) {
    printf("-----------------------------------------------------------------------------------------------------------\n");
    printf("|Время выполнения некоторых программ, которые применяют параллельные алгоритмы                            |\n");
    printf("|---------------------------------------------------------------------------------------------------------|\n");
    printf("| Название программы |Количество строк кода |Время исп. на SGI Callenge (cек)|Время исп. на SGI Indy (cек)|\n");
    printf("|                    |                      |                                |                            |\n");
    printf("|--------------------|----------------------|--------------------------------|----------------------------|\n");
    for (int i = 0; i < M; i++)
        printf("|%c%-19d|%-22d|%-32.2f|%-28.2f|\n",
            mm[i].randname,mm[i].number, mm[i].code, mm[i].challange, mm[i].indy);
    printf("-----------------------------------------------------------------------------------------------------------\n");
}
void Sort(Progr mm[]) {
    Progr inf;
    printf("-----------------------------------------------------------------------------------------------------------\n");
    printf("|Время выполнения некоторых программ, которые применяют параллельные алгоритмы                            |\n");
    printf("|---------------------------------------------------------------------------------------------------------|\n");
    printf("| Название программы |Количество строк кода |Время исп. на SGI Callenge (cек)|Время исп. на SGI Indy (cек)|\n");
    printf("|                    |                      |                                |                            |\n");
    printf("|--------------------|----------------------|--------------------------------|----------------------------|\n");
    for (int i = 0; i < M; i++)
        printf("|%c%-19d|%-22d|%-32.2f|%-28.2f|\n",
            mm[i].randname, mm[i].number, mm[i].code, mm[i].challange, mm[i].indy);
    printf("-----------------------------------------------------------------------------------------------------------\n");
    for (int i = 0; i < M - 1; i++) {
            for (int j = i + 1; j < M; j++)
            if (mm[i].number < mm[j].number) {
                inf = mm[i];
                mm[i] = mm[j];
                mm[j] = inf;
            }
    }
    printf("-----------------------------------------------------------------------------------------------------------\n");
    printf("|Время выполнения некоторых программ, которые применяют параллельные алгоритмы                            |\n");
    printf("|---------------------------------------------------------------------------------------------------------|\n");
    printf("| Название программы |Количество строк кода |Время исп. на SGI Callenge (cек)|Время исп. на SGI Indy (cек)|\n");
    printf("|                    |                      |                                |                            |\n");
    printf("|--------------------|----------------------|--------------------------------|----------------------------|\n");
    for (int i = 0; i < M; i++)
        printf("|%c%-19d|%-22d|%-32.2f|%-28.2f|\n",
            mm[i].randname, mm[i].number, mm[i].code, mm[i].challange, mm[i].indy);
    printf("-----------------------------------------------------------------------------------------------------------\n");
}
int main(void) {
    setlocale(LC_ALL,"Rus");
    Progr mm[7];
    while (true) {
        cout << "(1)вручную" << endl;
        cout << "(2) рандомно" << endl;
        cout << "(3)выход" << endl;
        int ans;
        cin >> ans;
        if (ans == 1) {
            Input(mm);
        }
        if (ans == 2) {
            Random(mm);
            cout << "Выберите действие" << endl;
            cout << "(1)печать" << endl;
            cout << "(2)сортировка" << endl;
            int otv;
            cin >> otv;
            if (otv == 1) {
                Print(mm);
            }
            if (otv == 2) {
                Sort(mm);
            }
        }
        if (ans == 3) break;
    }
 return 0;
}